#!/usr/bin/python
#-*- coding: utf-8 -*-

# Importējam moduļus.
from math import atan,sqrt

# Definējam savu funkciju.
def my_atan(x):
    a=1
    S=a
    k=1
    for i in range(500):
        R=((2*k)*(2*k-1)/(k**2*2**2*((2*k+1)/(2*k-1))))*((x**2)/(1+x**2))
        a=a*R
        S=S+a
        k=k+1
        if i==0:
            print("S{}={}".format(i,S))
        if i>=498:
            print("S{}={}".format(i,S))

    s=x/sqrt(1+x**2)*S
    return s
# Ziņa pasniedzējam.
print("Šis darbs veikts Python 3.0")

# Izglītojam lietotāju.
print("Arktangensu ir iespējams atrast no jebkāda x, jeb x{:c} [-{:c};+{:c}]".format(8712,8734,8734))
print("Funkcijas izteiksme:")
print("s(x)=(x/{:c}(1+x^2))*{:c}((2*k)!/((k!)^2*2^(2*k)*(2*k+1)))*(x^2/(1+x^2)^k".format(8730,8721))
print("Rekurences reizinātājs:")
print("2K*(2K-1)                   x^2")
print("--------------------- *    ------")
print("k^2*2^2*(2K+1)/(2K-1)      1+x^2")
# Iegūstam lietotāja datus.
x=float(eval(input("Lietotāj, ievadi argumentu x, lai iegūtu arctan vērtību!\n")))
print("Jūs ievadījāt skaitli {}, aprēķināsim arctan({})".format(x,x))
# Izvadām lietotājam nepieciešamo informāciju.
y=atan(x)
yy=my_atan(x)
print("x={}".format(x))
print("Math moduļa iebūvētās funkcijas aprēķins: arctan({})={}".format(x,y))
print("my_atan pašizveidotās funkcijas aprēķins: arctan({})={}".format(x,yy))

